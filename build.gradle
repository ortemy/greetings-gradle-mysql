buildscript {
	ext {
		springBootVersion = '2.0.5.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'api-caller'
version = '1.0.0'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	//compile('org.springframework.boot:spring-boot-starter-security')
	compile('io.github.openfeign:feign-okhttp:9.3.1')
	compile('io.github.openfeign:feign-gson:9.3.1')
	compile('io.github.openfeign:feign-slf4j:9.3.1')
	compile ('co.elastic.apm:apm-agent-api:1.0.1')

	compile('org.springframework.boot:spring-boot-starter-web')
	compileOnly ('org.projectlombok:lombok:1.16.16')
	// JPA Data (We are going to use Repositories, Entities, Hibernate, etc...)
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Use MySQL Connector-J
	compile 'mysql:mysql-connector-java'

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
}
